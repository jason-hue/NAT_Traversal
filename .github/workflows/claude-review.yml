name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
  pull_request_review_comment:
    types: [created, edited]

jobs:
  claude-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Run cargo check
      run: cargo check --all
      
    - name: Run cargo fmt
      run: cargo fmt --all -- --check
      
    - name: Run cargo clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Run tests
      run: cargo test --all
      
    - name: Claude Code Review
      uses: anthropics/claude-code-review-action@v1
      with:
        api-key: ${{ secrets.ANTHROPIC_API_KEY }}
        model: claude-3-sonnet-20240229
        max-tokens: 4000
        temperature: 0.1
        system-prompt: |
          You are a code review assistant for this Rust NAT traversal project. 
          Focus on:
          1. Code quality and best practices
          2. Security considerations
          3. Performance optimizations
          4. Error handling
          5. Documentation improvements
          6. Testing coverage
          
          The project consists of:
          - common/: Shared protocol definitions and configuration
          - server/: NAT traversal server with TLS support
          - client/: Client with GUI (egui) and CLI modes
          - platform/: Cross-platform service integration
          
          Key technologies:
          - tokio for async runtime
          - rustls for TLS encryption
          - egui for GUI
          - serde for serialization
          
          Provide constructive feedback with specific suggestions.
        diff-only: true
        include-patterns: |
          **/*.rs
          **/*.toml
          **/*.md
        exclude-patterns: |
          target/**
          **/*.lock
          **/.git/**
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}